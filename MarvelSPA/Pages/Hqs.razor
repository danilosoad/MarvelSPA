@page "/Hqs"

<br />
<MudTextField @bind-Value="@name" Label="Personagem" Variant="Variant.Text"></MudTextField>
<br />
<MudButton Variant="Variant.Filled" @onclick="BuscarHqs" Color="Color.Primary">Pesquisar</MudButton>
<MudOverlay @bind-Visible="isVisible" DarkBackground="true" AutoClose="true" />
<br />
<br />
<MudGrid>
    <MudItem xs="12">
        <MudGrid Spacing="10" Justify="Justify.Center">
            @if (listaHQ != null)
            {
                @foreach (var item in listaHQ.Take(3))
                {
                    <br />
                    <MudItem Style="height:200px;width:200px;">
                        <ImagemCard url=@item.thumbnail.path name="" description="@item.title"></ImagemCard>
                    </MudItem>
                    <br />
                }
            }
        </MudGrid>
    </MudItem>
</MudGrid>
@code {
    string resultado;
    string imgPath;
    string extension;
    string path;
    List<Personagem> listaHQ;

    public string name { get; set; }

    public int spacing { get; set; } = 2;
    void AddSpacing()
    {
        if (spacing >= 10)
        {
            spacing = 0;
        }
        else
        {
            spacing += 1;
        }
        StateHasChanged();
    }

    private async void BuscarHqs()
    {
        OpenOverlay();

        var personagem = await PersonagemService.BuscarPersonagemByName(name);
        var characterId = personagem.data.results.FirstOrDefault().id;

        var comics = await HqService.BuscarHqsByCharacterId(characterId);
        listaHQ = comics.data.results;

        foreach (var item in listaHQ)
        {
            item.thumbnail.path = getImageWithextension(item.thumbnail.path, item.thumbnail.extension);
            Console.WriteLine(item.thumbnail.path);
        }

        Console.WriteLine(comics.data.results.Count());

        CloseOverlay();
    }

    private bool isVisible;

    public void OpenOverlay()
    {
        isVisible = true;
        StateHasChanged();
    }

    public void CloseOverlay()
    {
        isVisible = false;
        StateHasChanged();
    }
    private string getImageWithextension(string path, string extesion)
    {
        Console.WriteLine(path + "." + extesion);
        return path + "." + extesion;
    }
}